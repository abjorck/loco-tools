/*
 * Loco REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.24
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AssetPatch : Patch structure for modifying assets



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetPatch {
    /// Unique asset identifier
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Broad content type to set
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// Optional context descriptor
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<String>,
    /// Optional notes for translators
    #[serde(rename = "notes", skip_serializing_if = "Option::is_none")]
    pub notes: Option<String>,
    #[serde(rename = "aliases", skip_serializing_if = "Option::is_none")]
    pub aliases: Option<serde_json::Value>,
}

impl AssetPatch {
    /// Patch structure for modifying assets
    pub fn new() -> AssetPatch {
        AssetPatch {
            id: None,
            _type: None,
            context: None,
            notes: None,
            aliases: None,
        }
    }
}

/// Broad content type to set
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "text")]
    Text,
    #[serde(rename = "html")]
    Html,
    #[serde(rename = "xml")]
    Xml,
}

